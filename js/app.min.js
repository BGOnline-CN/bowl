/*!
 *
 * iTMON app.js
 *
 * Author: BGONLINE.CN 
 * Date: 2017-05-31 16:09:19 
 * Last Modified by:   BGONLINE 
 * Last Modified time: 2017-05-31 16:09:19 
 *
 */

// APP START
var bgoApp = angular.module('bgoApp', ['ui.router']);

bgoApp.run(['$rootScope', '$state', '$stateParams', '$window', '$templateCache', function($rootScope, $state, $stateParams, $window, $templateCache) {
  
  ;(function() { // 判断是否为手机并且浏览器是否符合标准
    // var userAgentInfo = navigator.userAgent;
    // var Agents = ['Android', 'iPhone',
    //               'SymbianOS', 'Windows Phone',
    //               'iPad', 'iPod'];
    // var flag = false;
    // for(var v = 0; v < Agents.length; v++) {
    //   if(userAgentInfo.indexOf(Agents[v]) > 0) {
    //     flag = true;
    //     break;
    //   }
    // }
    // if(flag) {
      var ie = (function() {
        var v = 3,
          div = document.createElement('div'),
          all = div.getElementsByTagName('i');
        while (
          div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',
          all[0]
        );
        return v > 4 ? v : false;
      });
      // var getOs = function() { 
        if(!!window.ActiveXObject || 'ActiveXObject' in window) {
          if(!ie()) {
            return;
          }else {
            document.write('浏览器版本过低！');
          }
        }
      // }();
    // }else {
    //   // document.write('请使用手机访问！');
    // }
    // return;
  })();

  $rootScope.$state = $state;
  $rootScope.$stateParams = $stateParams;
  $rootScope.$storage = $window.localStorage;

  $rootScope.app = {
    title: '',
    description: '',
    keywords: '',
    name: 'BGONLINE.CN'
  }
  
  $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {  

    var no_nav_page = []; // 不显示header 和footer的页面 ['/login', '/check_in'];
    var current_page = toState.url;
    $rootScope.is_show_nav = true;
    
    for(var i = 0; i < no_nav_page.length; i++) {
      if(no_nav_page[i] == current_page) {
        $rootScope.is_show_nav = false;
        break;
      }
    }

    if (typeof(toState) !== 'undefined') {
      $templateCache.remove(toState.templateUrl);
    }
  });

}]);


// 路由配置
bgoApp.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {
  
  $urlRouterProvider.otherwise('/app/home');

  $stateProvider.state('app', {
    url: '/app',
    abstract: true,
    templateUrl: 'views/app.html',
    controller: 'bgoCtrl'

  }).state('app.home', {
    url: '/home',
    templateUrl: 'views/pages/home.html'

  })

}]).config(['$httpProvider', function($httpProvider) { // CORS post跨域配置
  $httpProvider.defaults.useXDomain = true;  
  // $httpProvider.defaults.withCredentials = true; // 跨域请求凭证 请求头发送cookie 配合java session 方式登录
  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
  /**
   * 
   * @param {Object} obj
   * @return {String}
   * 
   * $http.post 传参方式模拟 $.post
   */ 
  var param = function(obj) {
    var query = '', name, value, fullSubName, subName, subValue, innerObj, i;
    
    for(name in obj) {
    value = obj[name];
        
    if(value instanceof Array) {
      for(i = 0; i < value.length; ++i) {
        subValue = value[i];
        fullSubName = name + '[' + i + ']';
        innerObj = {};
        innerObj[fullSubName] = subValue;
        query += param(innerObj) + '&';
      }
    }
    else if(value instanceof Object) {
      for(subName in value) {
        subValue = value[subName];
        fullSubName = name + '[' + subName + ']';
        innerObj = {};
        innerObj[fullSubName] = subValue;
        query += param(innerObj) + '&';
      }
    }
    else if(value !== undefined && value !== null)
      query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';
    }
    
    return query.length ? query.substr(0, query.length - 1) : query;
  };

  $httpProvider.defaults.transformRequest = [function(data) {
    return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;
  }];

  delete $httpProvider.defaults.headers.common['X-Requested-With']; 
}]).config( ['$compileProvider', function( $compileProvider ) {   
    $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension):/);
    // Angular before v1.2 uses $compileProvider.urlSanitizationWhitelist(...)
  }
])
;

// bgoCtrl
bgoApp.controller('bgoCtrl', ['$scope', function($scope) {

  
  
  
}])